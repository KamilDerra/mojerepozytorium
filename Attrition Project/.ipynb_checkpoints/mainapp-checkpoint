{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6c1ba78b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import flask\n",
    "from io import StringIO\n",
    "import pandas as pd\n",
    "\n",
    "app = flask.Flask(__name__)\n",
    "\n",
    "@app.route('/', methods=['POST'])\n",
    "def endpoint():\n",
    "    try:\n",
    "        if flask.request.content_type == 'text/csv':\n",
    "            X = flask.request.data.decode('utf-8')\n",
    "            X = pd.read_csv(StringIO(X), sep=\";\")\n",
    "        else:\n",
    "            return flask.Response(response='Tylko dane w formacie CSV...', status=415, mimetype='text/plain')\n",
    "    except:\n",
    "        return flask.Response(response='Error...', status=500, mimetype='text/plain')\n",
    "    try:\n",
    "        io = StringIO()\n",
    "        Y = X \n",
    "        Y.to_csv(io, sep=\";\", index=False)\n",
    "        result = io.getvalue()\n",
    "    except:\n",
    "        return flask.Response(response='Błąd w formatowaniu danych...', status=500, mimetype='text/plain')\n",
    "    return flask.Response(response=result, status=200, mimetype='text/csv')\n",
    "\n",
    "@app.route('/ping', methods=['GET'])\n",
    "def endpoint2():\n",
    "    return flask.Response(response=\"OK\", status=200, mimetype='text/csv')\n",
    "\n",
    "app.run(host='0.0.0.0', port=80, threaded=False)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6b7cd478",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a533b3d9",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8355e9f3",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e96727c8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1b7b2163",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
